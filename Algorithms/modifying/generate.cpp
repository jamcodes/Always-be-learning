#include <iostream>
#include <algorithm>
#include <array>
#include <vector>
#include <iterator>
#include "auxiliary.h"


template< class ForwardIt, class Generator >
constexpr void generate( ForwardIt first, ForwardIt last, Generator g );

template< class OutputIt, class Size, class Generator >
constexpr OutputIt generate_n( OutputIt first, Size count, Generator g );

/*
std::generate - Assigns each element in range [first, last) a value generated by
the given function object g.
std::generate_n - Assigns values, generated by given function object g,
to the first count elements in the range beginning at first, if count>0. Does nothing otherwise.
*/


int main()
{
    std::array<int, 11> coll1;
    const auto gen = [i=0]()mutable noexcept{return i++;};
    std::generate(coll1.begin(), coll1.end(), gen);
    print_elements(coll1, "coll1: ");

    std::vector<int> coll2;
    std::generate_n(std::back_inserter(coll2), 11, gen);
    print_elements(coll2, "coll2: ");
}
